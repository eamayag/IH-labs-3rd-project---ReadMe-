{"version":3,"sources":["components/auth/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/content/ProfileService.js","components/content/Profile.js","components/content/PublicService.js","components/content/PublicProfile.js","components/content/EditProfile.js","App.js","serviceWorker.js","index.js"],"names":["require","config","AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","concat","process","withCredentials","Navbar","props","possibleConstructorReturn","getPrototypeOf","call","handleLogout","e","setState","redirect","state","loggedInUser","nextProps","objectSpread","react_default","a","createElement","Redirect","to","className","onClick","Link","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","console","log","handleChange","_event$target","target","name","value","defineProperty","_this2","onSubmit","type","onChange","Login","ProfileService","getProfile","err","updateProfile","deleteProfile","delete","Profile","_id","email","dateOfBirth","address","city","contactname","relationshipcontact","contactphone","bloodGroup","allergies","diagnosis","drug","administration","ambulance","additionalInfo","PublicService","getPublicProfile","id","Public","_ref","match","params","userSection","showEmail","showYearBirth","showAddress","showCity","contactSection","showContactName","showRelationshipContact","showContactPhone","emergencySection","showBloodGroup","showAllergies","showDisease","showDrugs","showAdministration","showAmbulance","showAdditionalInfo","backButton","Edit","profileService","copy","contact","condition","treatment","connection","_this$state","placeholder","App","getTheUser","userObj","_this3","fetchUser","title","info","navbar_Navbar","userInSession","Switch","Route","exact","path","render","content_Profile","EditProfile","PublicProfile","auth_Signup","auth_Login","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7661c061.chunk.js","sourcesContent":["import axios from 'axios';\nrequire('dotenv').config()\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n  }\n  //rutas del back donde el front solicitará la info\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from '../auth/AuthService';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null, redirect: false };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] })\n  }\n\n  handleLogout = (e) => {\n    this.props.logout().then(() =>  this.setState({redirect: true}))\n  }\n\n  render() {\n    if(this.state.redirect) return (<Redirect to='/login' />)\n\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <ul>\n            <li><a onClick={this.handleLogout}>Logout</a></li>\n          </ul>\n\n          <h2>Welcome, {this.state.loggedInUser.username}</h2>\n        </nav>\n      )\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <ul>\n            <li><Link to='/signup'>Signup</Link></li>\n            <li><Link to='/login'>Login</Link></li>\n            </ul>\n          </nav>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Navbar;\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AuthService from './AuthService'\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '', redirect: false };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            redirect: true\n        });\n        this.props.getUser(response.user)\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    if(this.state.redirect) return <Redirect to='/edit' />\n\n    return(\n      <div>\n        <h3>Create your account:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n      </div>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AuthService from './AuthService';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '', redirect: false };\n    this.service = new AuthService();\n  }\n  \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          redirect: true,\n          error: false\n        });\n\n        this.props.getUser(response);\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    if(this.state.redirect) return <Redirect to='/profile' />\n\n    return (<div>\n      <h3>Please, login to our site</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n\n        <input type=\"submit\" value=\"Login\"/>\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","import axios from 'axios';\nrequire('dotenv').config()\n\nclass ProfileService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/profile`,\n      withCredentials: true\n    });\n  }\n  //rutas del back donde el front solicitará la info\n  getProfile = () => {\n    return this.service.get('/')\n    .then(response => response.data)\n    .catch(err => console.log(err))\n  }\n\n  updateProfile = (data) => {\n    return this.service.post('/', {data})\n    .then(response => response.data)\n  }\n\n  deleteProfile = () => {\n    return this.service.delete('/:id',)\n    .then(response => response.data)\n  }\n}\n\nexport default ProfileService;","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport ProfileService from \"./ProfileService\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.service = new ProfileService();\n  }\n \n  componentDidMount() {\n\n    this.service.getProfile()\n    .then((response) => {\n      this.setState({\n        _id: response[0]._id,\n        name: response[0].name,\n        username: response[0].username, \n        email: response[0].email, \n        dateOfBirth: response[0].dateOfBirth,\n        address: response[0].address, \n        city: response[0].city, \n        contactname: response[1].contactname,\n        relationshipcontact: response[1].relationshipcontact,\n        contactphone: response[1].contactphone,\n        bloodGroup: response[2].bloodGroup,\n        allergies: response[2].allergies,\n        diagnosis: response[2].diagnosis,\n        drug: response[3].drug,\n        administration: response[3].administration,\n        ambulance: response[3].ambulance,\n        additionalInfo: response[3].additionalInfo,\n      })\n    })\n    .catch(err => console.log(err))\n  }\n\n   render() {\n    return this.state ? ( \n      <div>\n        <h3>{this.state.username}'s profile info</h3>\n        <p>This is the info that your NFC card will show.</p><Link to='/edit'>Anything to update? (Click here!)</Link>\n        <h4>\n          Your personal info:\n        </h4>\n        <ol>\n          <li>Full name: {this.state.name}</li>\n          <li>email: {this.state.email}</li>\n          <li>Year of birth: {this.state.dateOfBirth}</li>\n          <li>Address: {this.state.address}</li>\n          <li>City: {this.state.city}</li>\n        </ol>\n\n        <h4>\n          Your emergency contact:\n        </h4>\n        <ol>\n          <li>Name: {this.state.contactname}</li>\n          <li>is your... {this.state.relationshipcontact}</li>\n          <li>Phone: {this.state.contactphone} </li>\n        </ol>\n\n        <h4>\n          Your medical info:\n        </h4>\n        <ol>\n          <li>Blood group: {this.state.bloodGroup}</li>\n          <li>Allergies: {this.state.allergies}</li>\n          <li>Disease: {this.state.diagnosis} </li>\n        </ol>\n\n        <h4>\n          Your treatment info:\n        </h4>\n        <ol>\n          <li>I need this medication: {this.state.drug}</li>\n          <li>It must be administered in this way: {this.state.administration}</li>\n          <li>I need an ambulance: {this.state.ambulance} </li>\n          <li>Additional info: {this.state.additionalInfo} </li>\n        </ol>\n\n        <Link to={\"/publicprofile/\" + this.state._id}>See how others will see your profile</Link>\n        <br></br>\n\n      </div>\n    ) : 'Loading...'\n  }\n}\n  \nexport default Profile;\n\n","import axios from 'axios';\nrequire('dotenv').config()\n\nclass PublicService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/publicprofile`,\n      withCredentials: true\n    });\n  }\n  //rutas del back donde el front solicitará la info\n  getPublicProfile = (id) => {\n    return this.service.get(id)\n    .then(response => response.data)\n    .catch(err => console.log(err))\n  }\n\n}\n\nexport default PublicService; ","import React, { Component } from \"react\";\nimport PublicService from \"./PublicService\";\nimport { Link } from 'react-router-dom';\n\nclass Public extends Component {\n  constructor(props, {id}) {\n    super(props);\n    this.service = new PublicService();\n    props.user ?  this.state = {match: props.id.match.params.id, loggedInUser: props.user} : this.state = {match: props.id.match.params.id}\n   \n  }\n  \n  componentDidMount() {\n\n    this.service.getPublicProfile(this.state.match)\n    .then((response) => {\n      this.setState({\n        _id: response[0]._id,\n        name: response[0].name,\n        username: response[0].username, \n        email: response[0].email, \n        dateOfBirth: response[0].dateOfBirth,\n        address: response[0].address, \n        city: response[0].city, \n        contactname: response[1].contactname,\n        relationshipcontact: response[1].relationshipcontact,\n        contactphone: response[1].contactphone,\n        bloodGroup: response[2].bloodGroup,\n        allergies: response[2].allergies,\n        diagnosis: response[2].diagnosis,\n        drug: response[3].drug,\n        administration: response[3].administration,\n        ambulance: response[3].ambulance,\n        additionalInfo: response[3].additionalInfo,\n      })\n    })\n    .catch(err => console.log(err))\n  }\n\n  render() {\n    //user logged\n    let backButton='';\n    if (this.state.loggedInUser) {backButton = <li><Link to='/profile'>Back</Link></li>}\n    //Personal info - pack\n    let userSection;\n    if ((this.state.email) || (this.state.dateOfBirth) || (this.state.address) || (this.state.city)) {\n      userSection = <h4>Personal info:</h4>}\n    let showEmail;\n    if (this.state.email) {showEmail = <p>email: {this.state.email}</p>}\n    let showYearBirth;\n    if (this.state.dateOfBirth) {showYearBirth = <p>Year of birth: {this.state.dateOfBirth}</p>}\n    let showAddress;\n    if (this.state.address) {showAddress = <p>Address: {this.state.address}</p>}\n    let showCity;\n    if (this.state.city) {showCity = <p>City: {this.state.city}</p>}\n    //Emergency contact - pack\n    let contactSection;\n    if ((this.state.contactname) || (this.state.relationshipcontact) || (this.state.contactphone) ){\n      contactSection = <h4>EMERGENCY CONTACT:</h4>}\n    let showContactName;\n    if (this.state.contactname) {showContactName = <p>Name: {this.state.contactname}</p>}\n    let showRelationshipContact;\n    if (this.state.relationshipcontact) {showRelationshipContact = <p>is his/her...: {this.state.relationshipcontact}</p>}\n    let showContactPhone;\n    if (this.state.contactphone) {showContactPhone = <p>Phone: {this.state.contactphone}</p>}\n    //Emergency info - pack\n    let emergencySection;\n    if ((this.state.bloodGroup) || (this.state.diagnosis) || (this.state.drug) || (this.state.administration) || (this.state.ambulance) || (this.state.additionalInfo)) {\n      emergencySection = <h4>EMERGENCY INFO:</h4>}\n    let showBloodGroup;\n    if (this.state.bloodGroup) {showBloodGroup = <p>Blood group: {this.state.bloodGroup}</p>}\n    let showAllergies;\n    if (this.state.allergies) {showAllergies =  <p>Allergies: {this.state.allergies}</p>}\n    let showDisease;\n    if (this.state.diagnosis) {showDisease =  <p>Disease: {this.state.diagnosis}</p>}\n    let showDrugs;\n    if (this.state.drug) {showDrugs =  <p>{this.state.username} needs this medication: {this.state.drug}</p>}\n    let showAdministration;\n    if (this.state.administration) {showAdministration =  <p>It must be administered in this way: {this.state.administration}</p>}\n    let showAmbulance;\n    if (this.state.ambulance) {showAmbulance =  <p>{this.state.username} needs you to call an ambulance: {this.state.ambulance}</p>}\n    let showAdditionalInfo;\n    if (this.state.additionalInfo) {showAdditionalInfo =  <p>Additional info: {this.state.additionalInfo}</p>}\n\n    if (this.state){\n    return (\n    <div>\n        <h1>This is the public <em>ReadMe!</em> profile of {this.state.name}</h1>\n      <div>{userSection}</div>\n      <div>\n        {showEmail}\n        {showYearBirth}\n        {showAddress}\n        {showCity}\n      </div>\n      <div>{contactSection}</div>\n      <div>\n        {showContactName}\n        {showRelationshipContact}\n        {showContactPhone}\n      </div>  \n      <div>{emergencySection}</div>\n      <div>\n        {showBloodGroup}\n        {showAllergies}\n        {showDisease}\n        {showDrugs}\n        {showAdministration}\n        {showAmbulance}\n        {showAdditionalInfo}\n      </div>\n      <div>\n        {backButton}\n      </div>\n    </div>\n    );\n    } else {\n      return <h3>Loading...</h3>\n    }\n  }\n}\n\nexport default Public;\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ProfileService from \"./ProfileService\";\nrequire('dotenv').config()\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     redirect: false,\n      user: {},\n      contact: {},\n      condition: {},\n      treatment: {}\n    };\n\n    this.connection = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/profile`,\n      withCredentials: true\n    })\n\n    this.profileService = new ProfileService();\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();    \n    this.profileService.updateProfile(this.state)\n    .then(user => {/* console.log(user); */ this.setState({redirect: true})})\n  }\n\n  handleChange = (event, type) => {  \n    let {name, value} = event.target\n    //console.log(type, event.target.name, event.target.value);\n    let copy = {...this.state};\n  \n    copy[type][name] = value\n\n    this.setState({[type] : copy[type]})\n  }\n\n  render() {\n    let { name, email, dateOfBirth, address, city, contactname, \n      relationshipcontact, contactphone, bloodGroup, allergies,\n      diagnosis, drug, administration, ambulance, additionalInfo } = this.state;\n    if (this.state.redirect) return <Redirect to='/profile' />\n    return (\n      <div>\n        <h1>\n          Edit your <em>ReadMe!</em> profile:\n        </h1>\n        <p>Remember this is the info we will show on your NFC card. Just fill what you want to show, leave blank the rest.</p>\n        <form onSubmit={this.handleFormSubmit}>\n          <div>\n            <h4>Your personal info:</h4>\n            <label>Name:</label>\n            <input type='text' name='name' placeholder='Your full name' value={this.state.name} onChange={ e => this.handleChange(e, 'user')}/>\n            <br></br>    \n            <label>email:</label>\n            <input type='email' name='email' placeholder='Your email' value={this.state.email} onChange={ e => this.handleChange(e, 'user')}/>\n            <br></br>\n            <label>Year of birth:</label>\n            <input type='number' name='dateOfBirth' value={this.state.dateOfBirth} onChange={ e => this.handleChange(e, 'user')}/>\n            <br></br>\n            <label>Address:</label>\n            <input type='text' name='address' value={this.state.address} onChange={ e => this.handleChange(e, 'user')}/>\n            <br></br>\n            <label>City:</label>\n            <input type='text' name='city' value={this.state.city} onChange={ e => this.handleChange(e, 'user')}/>\n            <br></br>\n          </div>\n          <div>\n            <h4>Your emergency contact:</h4>\n            <label>Name of your emergency contact:</label>\n            <input type='text' name='contactname' placeholder='Name of your emergency contact' value={this.state.contactname} onChange={ e => this.handleChange(e, 'contact')}/>\n            <br></br>    \n            <label>Relationship with your emergency contact:</label>\n            <input type='text' name='relationshipcontact' placeholder='is my...(cousin? mother? brother?)' value={this.state.relationshipcontact} onChange={ e => this.handleChange(e, 'contact')}/>\n            <br></br>    \n            <label>Phone of your emergency contact:</label>\n            <input type='text' name='contactphone' value={this.state.contactphone} onChange={ e => this.handleChange(e, 'contact')}/>\n            <br></br>\n          </div>\n          <div>\n            <h4>Your medical emergency info:</h4>\n            <label>Blood group:</label>\n            <input type='text' name='bloodGroup' placeholder='0+, 0-, A+, A-, B+, B-, AB+, AB-' value={this.state.bloodGroup} onChange={ e => this.handleChange(e, 'condition')}/>\n            <br></br>    \n            <label>Allergies:</label>\n            <input type='text' name='allergies' placeholder='allergies' value={this.state.allergies} onChange={ e => this.handleChange(e, 'condition')}/>\n            <br></br>    \n            <label>Any important disease you want to inform about in your NFC card?</label>\n            <input type='text' name='diagnosis' placeholder='I have...' value={this.state.diagnosis} onChange={ e => this.handleChange(e, 'condition')}/>\n            <br></br>\n          </div>\n          <div>\n            <h4>Your treatment in an emergency situation:</h4>\n            <label>Medication you need to be administered inmediately:</label>\n            <input type='text' name='drug' placeholder='name of medication' value={this.state.drug} onChange={ e => this.handleChange(e, 'treatment')}/>\n            <br></br>    \n            <label>How should anyone give this medication to you?</label>\n            <input type='text' name='administration' placeholder='example: \"I must put two pills under my tongue\"...' value={this.state.administration} onChange={ e => this.handleChange(e, 'treatment')}/>\n            <br></br>    \n            <label>Will you need an ambulance, or going to a hospital, in addition to your medication?</label>\n            <input type='text' name='ambulance' placeholder='\"Yes, call an ambulance/No, I will be ok with my medication\"' value={this.state.ambulance} onChange={ e => this.handleChange(e, 'treatment')}/>\n            <br></br>\n            <label>Any additional info you think anyone could need to help you:</label>\n            <input type='text' name='additionalInfo' placeholder='example: \"I am deaf/I need to be sitted/I am afraid of dogs\"' value={this.state.additionalInfo} onChange={ e => this.handleChange(e, 'treatment')}/>\n            <br></br>\n          </div>\n          <input type='submit' value='Submit'/>\n          <li><Link to='/profile'>Back</Link></li>\n        </form>\n      </div>\n    );\n  }\n\n}\n\nexport default Edit;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Navbar from './components/navbar/Navbar';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport AuthService from './components/auth/AuthService';\nimport Profile from './components/content/Profile';\nimport Public from './components/content/PublicProfile';\nimport Edit from './components/content/EditProfile';\nrequire('dotenv').config()\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n   // console.log(props)\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  getTheUser= (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n  logout = () => {\n    return this.service.logout()\n    .then(() => {\n      this.setState({ loggedInUser: null });\n    })\n  }\n\n  fetchUser(){\n    if( this.state.loggedInUser === null ){\n      this.service.loggedin()\n      .then(response =>{\n        this.setState({\n          loggedInUser:  response\n        }) \n      })\n      .catch( err =>{\n        this.setState({\n          loggedInUser:  false\n        }) \n      })\n    }\n    \n  }\n  \n  render() {\n    this.fetchUser()   \n    const thisuser = this.state.loggedInUser;\n    const title = <h1>Welcome to ReadMe!</h1>;\n    const info = <h4>What if a tag could save your life?</h4>;\n    if(this.state.loggedInUser){\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n          </header>\n          <div className='body'>  \n            <Switch>\n              <Route exact path=\"/profile\" render={() => <Profile user={this.state.loggedInUser} />} />\n              <Route exact path=\"/edit\" render={() => <Edit user={this.state.loggedInUser} />} />\n              <Route exact path={\"/publicprofile/:id\"} render={(id) => <Public id={id} user={this.state.loggedInUser}/>} />\n            </Switch>\n          </div>\n        </div>\n      );\n    } else {\n\n\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n          </header>\n          <div className='body'>\n          <div>{title}</div>\n          <div>{info}</div>\n            <Switch>\n              <Route exact path={\"/publicprofile/:id\"} render={(id) => <Public id={id} />} />\n              <Route exact path='/signup' render={() => <Signup getUser={this.getTheUser}/>}/>\n              <Route exact path='/login' render={() => <Login getUser={this.getTheUser}/>}/>\n            </Switch>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}