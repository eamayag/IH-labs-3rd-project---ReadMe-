{"version":3,"sources":["components/auth/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/content/ProfileService.js","components/content/Profile.js","components/content/PublicService.js","components/content/PublicProfile.js","components/content/EditProfile.js","App.js","serviceWorker.js","index.js"],"names":["require","config","AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","concat","process","withCredentials","Navbar","props","possibleConstructorReturn","getPrototypeOf","call","handleLogout","e","setState","redirect","state","loggedInUser","nextProps","objectSpread","react_default","a","createElement","Redirect","to","className","onClick","href","Link","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","console","log","handleChange","_event$target","target","name","value","defineProperty","_this2","onSubmit","type","onChange","Login","ProfileService","getProfile","err","updateProfile","deleteProfile","delete","Profile","_id","email","dateOfBirth","address","city","contactname","relationshipcontact","contactphone","bloodGroup","allergies","diagnosis","drug","administration","ambulance","additionalInfo","style","width","PublicService","getPublicProfile","id","Public","_ref","match","params","userSection","showEmail","showYearBirth","showAddress","showCity","contactSection","showContactName","showRelationshipContact","showContactPhone","emergencySection","showBloodGroup","showAllergies","showDisease","showDrugs","showAdministration","showAmbulance","showAdditionalInfo","backButton","Edit","profileService","copy","contact","condition","treatment","connection","_this$state","placeholder","App","getTheUser","userObj","_this3","fetchUser","title","info","navbar_Navbar","userInSession","Switch","Route","exact","path","render","content_Profile","EditProfile","PublicProfile","auth_Signup","auth_Login","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b16945b5.chunk.js","sourcesContent":["import axios from 'axios';\nrequire('dotenv').config()\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/auth`,\n      withCredentials: true\n    });\n  }\n  //rutas del back donde el front solicitará la info\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport AuthService from '../auth/AuthService';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null, redirect: false };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] })\n  }\n\n  handleLogout = (e) => {\n    this.props.logout().then(() =>  this.setState({redirect: true}))\n  }\n\n  render() {\n    if(this.state.redirect) return (<Redirect to='/login' />)\n\n    if (this.state.loggedInUser) {\n      return (\n      <div className='navbardiv'>\n        <nav className=\"nav-style\">\n          <ul>\n            <li><a onClick={this.handleLogout}>Log out</a></li>\n          </ul>\n        </nav>\n      </div>\n      )\n    } else {\n      return (\n        <div className='navbardiv'>\n          <div>\n          <a className='forNavBar' href=\"https://github.com/eamayag\"><em>sprnz</em></a>\n          </div>\n          <div>\n            <nav className=\"nav-style\">\n            <ul>  \n            <li><Link to='/signup'>Sign up</Link></li>\n            <li><Link to='/login'>Log in</Link></li>\n            </ul>\n            </nav>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Navbar;\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AuthService from './AuthService'\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '', redirect: false };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            redirect: true\n        });\n        this.props.getUser(response.user)\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    if(this.state.redirect) return <Redirect to='/edit' />\n\n    return(\n      <div className='loginDiv'>\n        <h3>Create your account:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label className='labellogin'>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label className='labellogin'>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n      </div>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AuthService from './AuthService';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '', redirect: false };\n    this.service = new AuthService();\n  }\n  \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          redirect: true,\n          error: false\n        });\n\n        this.props.getUser(response);\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    if(this.state.redirect) return <Redirect to='/profile' />\n\n    return (\n    <div className='loginDiv'>\n      <h3>Log in:</h3>\n\n      <form className='logininput' onSubmit={this.handleFormSubmit}>\n        <fieldset className='logininput'>\n          <label className='labellogin'>Username:</label>\n          <input className='logininput' type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset className='logininput'>\n          <label className='labellogin'>Password:</label>\n          <input className='logininput' type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n\n        <input className='logininput' type=\"submit\" value=\"Log in\"/>\n      </form>\n\n      <p>{this.state.error ? 'Invalid username or password' : ''}</p>\n    </div>)\n  }\n}\n\nexport default Login;","import axios from 'axios';\nrequire('dotenv').config()\n\nclass ProfileService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/profile`,\n      withCredentials: true\n    });\n  }\n  //rutas del back donde el front solicitará la info\n  getProfile = () => {\n    return this.service.get('/')\n    .then(response => response.data)\n    .catch(err => console.log(err))\n  }\n\n  updateProfile = (data) => {\n    return this.service.post('/', {data})\n    .then(response => response.data)\n  }\n\n  deleteProfile = () => {\n    return this.service.delete('/:id',)\n    .then(response => response.data)\n  }\n}\n\nexport default ProfileService;","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport ProfileService from \"./ProfileService\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.service = new ProfileService();\n  }\n \n  componentDidMount() {\n\n    this.service.getProfile()\n    .then((response) => {\n      this.setState({\n        _id: response[0]._id,\n        name: response[0].name,\n        username: response[0].username, \n        email: response[0].email, \n        dateOfBirth: response[0].dateOfBirth,\n        address: response[0].address, \n        city: response[0].city, \n        contactname: response[1].contactname,\n        relationshipcontact: response[1].relationshipcontact,\n        contactphone: response[1].contactphone,\n        bloodGroup: response[2].bloodGroup,\n        allergies: response[2].allergies,\n        diagnosis: response[2].diagnosis,\n        drug: response[3].drug,\n        administration: response[3].administration,\n        ambulance: response[3].ambulance,\n        additionalInfo: response[3].additionalInfo,\n      })\n    })\n    .catch(err => console.log(err))\n  }\n\n   render() {\n    return this.state ? ( \n    <div>\n      <div>\n        <div className='instructions'>\n        <p>This is your NFC tag information.</p>\n        <p><Link to='/edit'>Any update? (Click here!)</Link></p>\n        </div>\n\n        <div className='allinfo'>\n          <div className=\"card text-white bg-dark mb-3 mx-auto\" style={{ width: '30rem'}}>\n            <h4 className='card-header profileinfo'>Your personal info:\n            </h4>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item list-group-item-warning\">Full name: {this.state.name}</li>\n                <li className=\"list-group-item list-group-item-warning\">email: {this.state.email}</li>\n                <li className=\"list-group-item list-group-item-warning\">Year of birth: {this.state.dateOfBirth}</li>\n                <li className=\"list-group-item list-group-item-warning\">Address: {this.state.address}</li>\n                <li className=\"list-group-item list-group-item-warning\">Address: {this.state.city}</li>\n              </ul>\n          </div>\n\n          <div className=\"card text-white bg-dark mb-3 mx-auto\" style={{ width: '30rem' }}>\n            <h4 className='card-header profileinfo'>Your emergency contact:\n            </h4>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item list-group-item-warning\">Name: {this.state.contactname}</li>\n                <li className=\"list-group-item list-group-item-warning\">is your... {this.state.relationshipcontact}</li>\n                <li className=\"list-group-item list-group-item-warning\">Phone: {this.state.contactphone}</li>\n              </ul>\n          </div>\n\n          <div className=\"card text-white bg-dark mb-3 mx-auto\" style={{ width: '30rem' }}>\n            <h4 className='card-header profileinfo'>Your medical info:\n            </h4>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item list-group-item-warning\">Blood group: {this.state.bloodGroup}</li>\n                <li className=\"list-group-item list-group-item-warning\">Allergies: {this.state.allergies}</li>\n              </ul>\n          </div>\n\n          <div className=\"card text-white bg-dark mb-3 mx-auto\" style={{ width: '30rem' }}>\n            <h4 className='card-header profileinfo'>Your treatment info: \n            </h4>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item list-group-item-warning\">Disease: {this.state.diagnosis} </li>\n                <li className=\"list-group-item list-group-item-warning\">I need this medication: {this.state.drug}</li>\n                <li className=\"list-group-item list-group-item-warning\">It must be administered in this way: {this.state.administration}</li>\n                <li className=\"list-group-item list-group-item-warning\">I need an ambulance: {this.state.ambulance} </li>\n                <li className=\"list-group-item list-group-item-warning\">Additional info: {this.state.additionalInfo} </li>\n              </ul>\n            </div>\n          </div>\n            \n            \n        </div>\n\n        <p className='instructions'><Link to={\"/publicprofile/\" + this.state._id}>See how others will see your profile</Link></p>\n        <br></br>\n\n      </div>\n    ) : 'Loading...'\n  }\n}\n  \nexport default Profile;\n\n","import axios from 'axios';\nrequire('dotenv').config()\n\nclass PublicService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/publicprofile`,\n      withCredentials: true\n    });\n  }\n  //rutas del back donde el front solicitará la info\n  getPublicProfile = (id) => {\n    return this.service.get(id)\n    .then(response => response.data)\n    .catch(err => console.log(err))\n  }\n\n}\n\nexport default PublicService; ","import React, { Component } from \"react\";\nimport PublicService from \"./PublicService\";\nimport { Link } from 'react-router-dom';\n\nclass Public extends Component {\n  constructor(props, {id}) {\n    super(props);\n    this.service = new PublicService();\n    props.user ?  this.state = {match: props.id.match.params.id, loggedInUser: props.user} : this.state = {match: props.id.match.params.id}\n  }\n  \n  componentDidMount() {\n\n    this.service.getPublicProfile(this.state.match)\n    .then((response) => {\n      this.setState({\n        _id: response[0]._id,\n        name: response[0].name,\n        username: response[0].username, \n        email: response[0].email, \n        dateOfBirth: response[0].dateOfBirth,\n        address: response[0].address, \n        city: response[0].city, \n        contactname: response[1].contactname,\n        relationshipcontact: response[1].relationshipcontact,\n        contactphone: response[1].contactphone,\n        bloodGroup: response[2].bloodGroup,\n        allergies: response[2].allergies,\n        diagnosis: response[2].diagnosis,\n        drug: response[3].drug,\n        administration: response[3].administration,\n        ambulance: response[3].ambulance,\n        additionalInfo: response[3].additionalInfo,\n      })\n    })\n    .catch(err => console.log(err))\n  }\n\n\n  render() {\n    //user logged\n    let backButton='';\n    if (this.state.loggedInUser) {backButton = <p className='instructions'><Link to='/profile'>Back</Link></p>}\n    //Personal info - pack\n    let userSection;\n    if ((this.state.email) || (this.state.dateOfBirth) || (this.state.address) || (this.state.city)) {\n      userSection = <h4>Personal info:</h4>}\n    let showEmail;\n    if (this.state.email) {showEmail = <p className='joinp'>email: {this.state.email}</p>}\n    let showYearBirth;\n    if (this.state.dateOfBirth) {showYearBirth = <p className='joinp'> Year of birth: {this.state.dateOfBirth}</p>}\n    let showAddress;\n    if (this.state.address) {showAddress = <p className='joinp'>Address: {this.state.address}.  </p>}\n    let showCity;\n    if (this.state.city) {showCity = <p className='joinp'> {this.state.city}</p>}\n    //Emergency contact - pack\n    let contactSection;\n    if ((this.state.contactname) || (this.state.relationshipcontact) || (this.state.contactphone) ){\n      contactSection = <h4>EMERGENCY CONTACT:</h4>}\n    let showContactName;\n    if (this.state.contactname) {showContactName = <p className='joinp'>Name: {this.state.contactname}</p>}\n    let showRelationshipContact;\n    if (this.state.relationshipcontact) {showRelationshipContact = <p className='joinp'> (His/her...: {this.state.relationshipcontact})</p>}\n    let showContactPhone;\n    if (this.state.contactphone) {showContactPhone = <p>Phone: {this.state.contactphone}</p>}\n    //Emergency info - pack\n    let emergencySection;\n    if ((this.state.bloodGroup) || (this.state.diagnosis) || (this.state.drug) || (this.state.administration) || (this.state.ambulance) || (this.state.additionalInfo)) {\n      emergencySection = <h4>EMERGENCY INFO:</h4>}\n    let showBloodGroup;\n    if (this.state.bloodGroup) {showBloodGroup = <p className='joinp'>Blood group: {this.state.bloodGroup}</p>}\n    let showAllergies;\n    if (this.state.allergies) {showAllergies =  <p className='joinp'> Allergies: {this.state.allergies}</p>}\n    let showDisease;\n    if (this.state.diagnosis) {showDisease =  <p>Disease: {this.state.diagnosis}</p>}\n    let showDrugs;\n    if (this.state.drug) {showDrugs =  <p className='joinp'>{this.state.username} needs this medication: {this.state.drug}</p>}\n    let showAdministration;\n    if (this.state.administration) {showAdministration =  <p className='joinp'> It must be administered in this way: {this.state.administration}</p>}\n    let showAmbulance;\n    if (this.state.ambulance) {showAmbulance =  <p>{this.state.username} needs you to call an ambulance: {this.state.ambulance}</p>}\n    let showAdditionalInfo;\n    if (this.state.additionalInfo) {showAdditionalInfo =  <p>Additional info: {this.state.additionalInfo}</p>}\n\n    if (this.state){\n    return (\n    <div>\n      <div>\n          <h2 className='publictitle'>This is an emergency <em>ReadMe!</em> profile</h2>\n          <h4 className='emergency'>If you're reading this, {this.state.name} probably needs your help!</h4>\n        <div className='allinfo'>\n          <div className=\"card text-white bg-dark mb-3 mx-auto\" style={{ width: '30rem'}}>\n            <div className='card-header'>{userSection}\n            </div>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item list-group-item-info\">{showEmail}</li>\n                <li className=\"list-group-item list-group-item-info\">{showYearBirth}</li>\n                <li className=\"list-group-item list-group-item-info\">{showAddress}{showCity}</li>\n              </ul>\n          </div>\n\n          <div className=\"card mx-auto\" style={{ width: '30rem' }}>\n            <div className='card-header'>{contactSection}\n            </div>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item list-group-item-info\">{showContactName}</li>\n                <li className=\"list-group-item list-group-item-info\">{showRelationshipContact}</li>\n                <li className=\"list-group-item list-group-item-info\">{showContactPhone}</li>\n              </ul>\n          </div>\n\n          <div className=\"card\" style={{ width: '30rem' }}>\n            <div className='card-header'>{emergencySection}\n            </div>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item list-group-item-info\">{showBloodGroup}</li>\n                <li className=\"list-group-item list-group-item-info\">{showAllergies}</li>\n                <li className=\"list-group-item list-group-item-info\">{showDisease}</li>\n                <li className=\"list-group-item list-group-item-info\">{showDrugs}</li>\n                <li className=\"list-group-item list-group-item-info\">{showAdministration}</li>\n                <li className=\"list-group-item list-group-item-info\">{showAmbulance}</li>\n                <li className=\"list-group-item list-group-item-info\">{showAdditionalInfo}</li>\n              </ul>\n          </div>\n        </div>\n      </div>\n      <div className='publictitle'>\n        {backButton}\n      </div>\n    </div>\n    );\n    } else {\n      return <h3>Loading...</h3>\n    }\n  }\n}\n\nexport default Public;\n","import React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ProfileService from \"./ProfileService\";\nrequire('dotenv').config()\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     redirect: false,\n      user: {},\n      contact: {},\n      condition: {},\n      treatment: {}\n    };\n\n    this.connection = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/profile`,\n      withCredentials: true\n    })\n\n    this.profileService = new ProfileService();\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();    \n    this.profileService.updateProfile(this.state)\n    .then(user => {/* console.log(user); */ this.setState({redirect: true})})\n  }\n\n  handleChange = (event, type) => {  \n    let {name, value} = event.target\n    //console.log(type, event.target.name, event.target.value);\n    let copy = {...this.state};\n  \n    copy[type][name] = value\n\n    this.setState({[type] : copy[type]})\n  }\n\n  render() {\n    let { name, email, dateOfBirth, address, city, contactname, \n      relationshipcontact, contactphone, bloodGroup, allergies,\n      diagnosis, drug, administration, ambulance, additionalInfo } = this.state;\n    if (this.state.redirect) return <Redirect to='/profile' />\n    return (\n      <div className='edittitle'>\n        <h3>\n          Edit your <em>ReadMe!</em> profile:\n        </h3>\n        <h4>This is your NFC tag information. Just fill what you want to show!</h4>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className='editform'>\n            <h4>Your personal info:</h4>\n            <label>Name:</label>\n            <input type='text' name='name' value={this.state.name} onChange={ e => this.handleChange(e, 'user')}/>\n            <br></br>    \n            <label>email:</label>\n            <input type='email' name='email' value={this.state.email} onChange={ e => this.handleChange(e, 'user')}/>\n            <br></br>\n            <label>Year of birth:</label>\n            <input type='number' name='dateOfBirth' value={this.state.dateOfBirth} onChange={ e => this.handleChange(e, 'user')}/>\n            <br></br>\n            <label>Address:</label>\n            <input type='text' name='address' value={this.state.address} onChange={ e => this.handleChange(e, 'user')}/>\n            <br></br>\n            <label>City:</label>\n            <input type='text' name='city' value={this.state.city} onChange={ e => this.handleChange(e, 'user')}/>\n            <br></br>\n          </div>\n          <div className='editform'>\n            <h4>Your emergency contact:</h4>\n            <label>Name of your emergency contact:</label>\n            <input type='text' name='contactname' value={this.state.contactname} onChange={ e => this.handleChange(e, 'contact')}/>\n            <br></br>    \n            <label>Relationship with your emergency contact:</label>\n            <input type='text' name='relationshipcontact' placeholder='(cousin? mother? brother?)' value={this.state.relationshipcontact} onChange={ e => this.handleChange(e, 'contact')}/>\n            <br></br>    \n            <label>Phone of your emergency contact:</label>\n            <input type='text' name='contactphone' value={this.state.contactphone} onChange={ e => this.handleChange(e, 'contact')}/>\n            <br></br>\n          </div>\n          <div className='editform'>\n            <h4>Your medical emergency info:</h4>\n            <label>Blood group:</label>\n            <input type='text' name='bloodGroup' placeholder='0+, 0-, A+, A-, B+, B-, AB+, AB-' value={this.state.bloodGroup} onChange={ e => this.handleChange(e, 'condition')}/>\n            <br></br>    \n            <label>Allergies:</label>\n            <input type='text' name='allergies' value={this.state.allergies} onChange={ e => this.handleChange(e, 'condition')}/>\n            <br></br>    \n            <label>Any important disease you want to inform about in your NFC card?</label>\n            <input type='text' name='diagnosis' placeholder='I have...' value={this.state.diagnosis} onChange={ e => this.handleChange(e, 'condition')}/>\n            <br></br>\n          </div>\n          <div className='editform'>\n            <h4>Your treatment in an emergency situation:</h4>\n            <label>Medication you need to be administered inmediately:</label>\n            <input type='text' name='drug' value={this.state.drug} onChange={ e => this.handleChange(e, 'treatment')}/>\n            <br></br>    \n            <label>How should anyone give this medication to you?</label>\n            <input type='text' name='administration' placeholder='example: \"pill under my tongue\"' value={this.state.administration} onChange={ e => this.handleChange(e, 'treatment')}/>\n            <br></br>    \n            <label>Will you need an ambulance, or going to a hospital, in addition to your medication?</label>\n            <input type='text' name='ambulance' placeholder='\"Yes/No\"' value={this.state.ambulance} onChange={ e => this.handleChange(e, 'treatment')}/>\n            <br></br>\n            <label>Any additional info you think anyone could need to help you:</label>\n            <input type='text' name='additionalInfo' placeholder='example: \"I need to be sitted\"' value={this.state.additionalInfo} onChange={ e => this.handleChange(e, 'treatment')}/>\n            <br></br>\n          </div>\n          <div className='inputedit'>\n          <input type='submit' value='Submit'/>\n          <p className='instructions'><Link to='/profile'>Back</Link></p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n}\n\nexport default Edit;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Navbar from './components/navbar/Navbar';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport AuthService from './components/auth/AuthService';\nimport Profile from './components/content/Profile';\nimport Public from './components/content/PublicProfile';\nimport Edit from './components/content/EditProfile';\nrequire('dotenv').config()\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n   // console.log(props)\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  getTheUser= (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n  logout = () => {\n    return this.service.logout()\n    .then(() => {\n      this.setState({ loggedInUser: null });\n    })\n  }\n\n  fetchUser(){\n    if( this.state.loggedInUser === null ){\n      this.service.loggedin()\n      .then(response =>{\n        this.setState({\n          loggedInUser:  response\n        }) \n      })\n      .catch( err =>{\n        this.setState({\n          loggedInUser:  false\n        }) \n      })\n    }\n    \n  }\n  \n  render() {\n    this.fetchUser()   \n    const thisuser = this.state.loggedInUser;\n    const title = <h1 className='title'>Welcome to ReadMe!</h1>;\n    const info = <h2 className='info'>...what if a tag could save your life?</h2>;\n    // const description = <h5>Sign up to have a NFC tag with all your emergency information. Let others know what you need when you can't say it!</h5>;\n    // const examples = <p><em>Patients, children, elderly... if you might need help anytime from unknown people, let ReadMe help you!</em></p>\n \n    if(this.state.loggedInUser){\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n          </header>\n          <div className='body'>  \n            <Switch>\n              <Route exact path=\"/profile\" render={() => <Profile user={this.state.loggedInUser} />} />\n              <Route exact path=\"/edit\" render={() => <Edit user={this.state.loggedInUser} />} />\n              <Route exact path={\"/publicprofile/:id\"} render={(id) => <Public id={id} user={this.state.loggedInUser}/>} />\n            </Switch>\n          </div>\n        </div>\n      );\n\n    } else {\n\n\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n          </header>\n          <div className='body'>\n         \n          <div>{info}</div>\n          <br></br>\n          <div>{title}</div>\n          \n            <Switch>\n              <Route exact path={\"/publicprofile/:id\"} render={(id) => <Public id={id} />} />\n              <Route exact path='/signup' render={() => <Signup getUser={this.getTheUser}/>}/>\n              <Route exact path='/login' render={() => <Login getUser={this.getTheUser}/>}/>\n            </Switch>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}